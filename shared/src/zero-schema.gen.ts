/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by drizzle-zero.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { Row } from "@rocicorp/zero";
import { createBuilder } from "@rocicorp/zero";
import type { DrizzleToZeroSchema, ZeroCustomType } from "drizzle-zero";
import type * as drizzleSchema from "./db/schema/public";

type ZeroSchema = DrizzleToZeroSchema<typeof drizzleSchema>;

/**
 * The Zero schema object.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const schema = {
  tables: {
    channels: {
      name: "channels",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "channels",
            "id"
          >,
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "channels",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "channels",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
        name: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "channels",
            "name"
          >,
        },
      },
      primaryKey: ["id"],
      serverName: "channel",
    },
    messages: {
      name: "messages",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "messages",
            "id"
          >,
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "messages",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "messages",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
        senderID: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "messages",
            "senderID"
          >,
          serverName: "sender_id",
        },
        channelID: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "messages",
            "channelID"
          >,
          serverName: "channel_id",
        },
        body: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "messages",
            "body"
          >,
        },
      },
      primaryKey: ["id"],
      serverName: "message",
    },
    users: {
      name: "users",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "users",
            "id"
          >,
        },
        name: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "users",
            "name"
          >,
        },
        email: {
          type: "string",
          optional: false,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "users",
            "email"
          >,
        },
        emailVerified: {
          type: "boolean",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "users",
            "emailVerified"
          >,
          serverName: "email_verified",
        },
        image: {
          type: "string",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "users",
            "image"
          >,
        },
        createdAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "users",
            "createdAt"
          >,
          serverName: "created_at",
        },
        updatedAt: {
          type: "number",
          optional: true,
          customType: null as unknown as ZeroCustomType<
            ZeroSchema,
            "users",
            "updatedAt"
          >,
          serverName: "updated_at",
        },
      },
      primaryKey: ["id"],
      serverName: "user",
    },
  },
  relationships: {
    channels: {
      messages: [
        {
          sourceField: ["id"],
          destField: ["channelID"],
          destSchema: "messages",
          cardinality: "many",
        },
      ],
    },
    messages: {
      sender: [
        {
          sourceField: ["senderID"],
          destField: ["id"],
          destSchema: "users",
          cardinality: "one",
        },
      ],
      channel: [
        {
          sourceField: ["channelID"],
          destField: ["id"],
          destSchema: "channels",
          cardinality: "one",
        },
      ],
    },
    users: {
      messages: [
        {
          sourceField: ["id"],
          destField: ["senderID"],
          destSchema: "messages",
          cardinality: "many",
        },
      ],
    },
  },
  enableLegacyQueries: true,
  enableLegacyMutators: true,
} as const;

/**
 * Represents the Zero schema type.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Schema = typeof schema;
/**
 * Represents a row from the "channels" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Channel = Row<Schema["tables"]["channels"]>;
/**
 * Represents a row from the "messages" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type Message = Row<Schema["tables"]["messages"]>;
/**
 * Represents a row from the "users" table.
 * This type is auto-generated from your Drizzle schema definition.
 */
export type User = Row<Schema["tables"]["users"]>;

/**
 * Represents the Zero schema query builder.
 * This type is auto-generated from your Drizzle schema definition.
 */
export const builder = createBuilder(schema);
